/* XOR Example version2 */

module my_xor(A,B,C);
   input A,B;
   output C;
   wire x,y,z;
   nand g1 (x,A,B); /* we can create multiple instantiations of the gate as indicated below */
   nand g2 (y,A,x),
        g3 (z,x,B),
        g4 (C,y,z);
endmodule

module test;
reg A,B; // registers A & B, allowing us to assign values
wire C; // wire connection C
my_xor x1 (A,B,C);
initial
    /* special structure; creates a block of statements
        We start with 'begin' and finish with 'end'*/
begin
/* Optionally, we can use $display instead of $monitor */
$display("A B C");
    // used to create a 'table header' like visual for our $monitor output
$monitor("%b %b %b",A,B,C);
A=0;B=0;
#1  A=0;B=1;
#1  A=1;B=0;
#1  A=1;B=1;
    /* With our $monitor statement moved ABOVE the variables and delays posted prior to successive assignments,
        we'll now have output whenever our values are changed/reassigned*/
end
endmodule
